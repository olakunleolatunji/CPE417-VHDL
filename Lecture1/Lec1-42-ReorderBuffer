library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity Reorder_Buffer is
    Port (
        clk : in STD_LOGIC;
        reset : in STD_LOGIC;
        instr_in : in STD_LOGIC_VECTOR(15 downto 0);
        result_out : out STD_LOGIC_VECTOR(15 downto 0)
    );
end Reorder_Buffer;

architecture Behavioral of Reorder_Buffer is
    type Buffer_Type is array (0 to 3) of STD_LOGIC_VECTOR(15 downto 0);
    signal reorder_buffer : Buffer_Type := (others => (others => '0'));
    signal head, tail : integer range 0 to 3 := 0;
begin
    process (clk, reset)
    begin
        if reset = '1' then
            head <= 0;
            tail <= 0;
            reorder_buffer <= (others => (others => '0'));
        elsif rising_edge(clk) then
            if instr_in /= "0000000000000000" then
                reorder_buffer(tail) <= instr_in + "0000000000000001"; -- Example operation
                tail <= (tail + 1) mod 4;
            end if;

            if head /= tail then
                result_out <= reorder_buffer(head);
                head <= (head + 1) mod 4;
            else
                result_out <= (others => '0');
            end if;
        end if;
    end process;
end Behavioral;
